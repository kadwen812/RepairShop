// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RepairShop.Migrations
{
    [DbContext(typeof(RepairShopDbContext))]
    partial class RepairShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RepairShop.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("Make")
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<bool?>("Paid")
                        .HasColumnType("boolean");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Service")
                        .HasColumnType("text");

                    b.Property<string>("Technician")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Invoice", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "John Smith",
                            CustomerPhone = "555-555-5555",
                            Description = "Replace the screen on your device",
                            Identifier = "1234567890",
                            Make = "iPhone",
                            Manufacturer = "Apple",
                            Model = "14 Pro Max",
                            Paid = false,
                            Price = 299.99f,
                            Service = "New Screen Replacement",
                            Technician = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "Jane Doe",
                            CustomerPhone = "555-555-5555",
                            Description = "Replace the screen on your device",
                            Identifier = "0987654321",
                            Make = "iPhone",
                            Manufacturer = "Apple",
                            Model = "14 Pro Max",
                            Paid = false,
                            Price = 149.99f,
                            Service = "Used Screen Replacement",
                            Technician = "John Doe"
                        });
                });

            modelBuilder.Entity("RepairShop.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Make")
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Service", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Replace the screen on your device",
                            Make = "iPhone",
                            Manufacturer = "Apple",
                            Model = "14 Pro Max",
                            Name = "New Screen Replacement",
                            Price = 299.99f
                        },
                        new
                        {
                            Id = 2,
                            Description = "Replace the screen on your device",
                            Make = "iPhone",
                            Manufacturer = "Apple",
                            Model = "14 Pro Max",
                            Name = "Used Screen Replacement",
                            Price = 149.99f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
